{"ast":null,"code":"var _jsxFileName = \"/Users/grigore/Github/booking/src/context.js\";\nimport React, { Component } from \"react\";\nimport items from \"./data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomContext = /*#__PURE__*/React.createContext(); //new we have access to provider and consumer\n\nexport default class RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true\n    };\n\n    this.getRoom = slug => {\n      let temRooms = [...this.state.rooms];\n    };\n  }\n\n  //getdata fn\n  componentDidMount() {\n    //this.getData\n    let rooms = this.formatData(items);\n    console.log(rooms);\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n      let room = { ...item.fields,\n        images,\n        id\n      };\n      return room;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(RoomContext.Provider, {\n      value: { ...this.state\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nconst RoomConsumer = RoomContext.Consumer;\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/Users/grigore/Github/booking/src/context.js"],"names":["React","Component","items","RoomContext","createContext","RoomProvider","state","rooms","sortedRooms","featuredRooms","loading","getRoom","slug","temRooms","componentDidMount","formatData","console","log","filter","room","featured","setState","tempItems","map","item","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,QAAlB;;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,EAApB,C,CACA;;AAEA,eAAe,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAClDK,KADkD,GAC1C;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,aAAa,EAAE,EAHT;AAINC,MAAAA,OAAO,EAAE;AAJH,KAD0C;;AAAA,SAiClDC,OAjCkD,GAiCvCC,IAAD,IAAU;AACtB,UAAIC,QAAQ,GAAG,CAAC,GAAG,KAAKP,KAAL,CAAWC,KAAf,CAAf;AAEG,KApCiD;AAAA;;AAOlD;AACAO,EAAAA,iBAAiB,GAAG;AAClB;AACA,QAAIP,KAAK,GAAG,KAAKQ,UAAL,CAAgBb,KAAhB,CAAZ;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACA,QAAIE,aAAa,GAAGF,KAAK,CAACW,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,QAAL,KAAkB,IAAzC,CAApB;AACA,SAAKC,QAAL,CAAc;AACZd,MAAAA,KADY;AAEZE,MAAAA,aAFY;AAGZD,MAAAA,WAAW,EAAED,KAHD;AAIZG,MAAAA,OAAO,EAAE;AAJG,KAAd;AAMD;;AACDK,EAAAA,UAAU,CAACb,KAAD,EAAQ;AAChB,QAAIoB,SAAS,GAAGpB,KAAK,CAACqB,GAAN,CAAWC,IAAD,IAAU;AAClC,UAAIC,EAAE,GAAGD,IAAI,CAACE,GAAL,CAASD,EAAlB;AACA,UAAIE,MAAM,GAAGH,IAAI,CAACI,MAAL,CAAYD,MAAZ,CAAmBJ,GAAnB,CAAwBM,KAAD,IAAWA,KAAK,CAACD,MAAN,CAAaE,IAAb,CAAkBC,GAApD,CAAb;AACA,UAAIZ,IAAI,GAAG,EACT,GAAGK,IAAI,CAACI,MADC;AAETD,QAAAA,MAFS;AAGTF,QAAAA;AAHS,OAAX;AAKA,aAAON,IAAP;AACD,KATe,CAAhB;AAUA,WAAOG,SAAP;AACD;;AAMDU,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,EAAE,GAAG,KAAK1B;AAAV,OAA7B;AAAA,gBACG,KAAK2B,KAAL,CAAWC;AADd;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA5CiD;AA+CpD,MAAMC,YAAY,GAAGhC,WAAW,CAACiC,QAAjC;AAEA,SAAS/B,YAAT,EAAuB8B,YAAvB,EAAqChC,WAArC","sourcesContent":["import React, { Component } from \"react\";\nimport items from \"./data\";\n\nconst RoomContext = React.createContext();\n//new we have access to provider and consumer\n\nexport default class RoomProvider extends Component {\n  state = {\n    rooms: [],\n    sortedRooms: [],\n    featuredRooms: [],\n    loading: true,\n  };\n  //getdata fn\n  componentDidMount() {\n    //this.getData\n    let rooms = this.formatData(items);\n    console.log(rooms);\n    let featuredRooms = rooms.filter((room) => room.featured === true);\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false,\n    });\n  }\n  formatData(items) {\n    let tempItems = items.map((item) => {\n      let id = item.sys.id;\n      let images = item.fields.images.map((image) => image.fields.file.url);\n      let room = {\n        ...item.fields,\n        images,\n        id,\n      };\n      return room;\n    });\n    return tempItems;\n  }\n  getRoom = (slug) => {\nlet temRooms = [...this.state.rooms];\n\n  }\n\n  render() {\n    return (\n      <RoomContext.Provider value={{ ...this.state }}>\n        {this.props.children}\n      </RoomContext.Provider>\n    );\n  }\n}\n\nconst RoomConsumer = RoomContext.Consumer;\n\nexport { RoomProvider, RoomConsumer, RoomContext };\n"]},"metadata":{},"sourceType":"module"}