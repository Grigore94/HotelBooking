{"ast":null,"code":"var _jsxFileName = \"/Users/grigore/Github/booking/src/components/RoomFilter.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useContext } from \"react\";\nimport { RoomContext } from \"../context\";\nimport Title from \"../components/Title\"; //geting all unique type values for filtering types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getUnique = (items, value) => {\n  return [...new Set(items.map(item => item[value]))];\n};\n\nexport default function RoomFilter({\n  rooms\n}) {\n  _s();\n\n  const context = useContext(RoomContext);\n  const {\n    handleChange,\n    type,\n    capacity,\n    price,\n    minPrice,\n    maxPrice,\n    minSize,\n    maxSize,\n    breakfast,\n    pets\n  } = context; //getting unique types\n\n  let types = getUnique(rooms, \"type\"); //getting all types\n\n  types = [\"all\", ...types]; //maping to jsx as option type filtering\n\n  types = types.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item,\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }); //filtering capacity\n\n  let people = getUnique(rooms, \"capacity\");\n  people = people.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item,\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"filter-container\",\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      title: \"search rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"filter-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n          htmlFor: \"type\",\n          children: \"Room Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"type\",\n          id: \"type\",\n          value: type,\n          className: \"form-control\",\n          onChange: handleChange,\n          children: types\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n          htmlFor: \"capacity\",\n          children: \"Guests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"capacity\",\n          id: \"capacity\",\n          value: capacity,\n          className: \"form-control\",\n          onChange: handleChange,\n          children: people\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: [\"room price $\", price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          name: \"price\",\n          min: minPrice,\n          max: maxPrice,\n          id: \"price\",\n          value: price,\n          onChange: handleChange,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFo: \"size\",\n          children: \"room size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"size-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"minSize\",\n            id: \"size\",\n            value: minSize,\n            onChange: handleChange,\n            className: \"size-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"maxSize\",\n            id: \"size\",\n            value: maxSize,\n            onChange: handleChange,\n            className: \"size-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RoomFilter, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n_c = RoomFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomFilter\");","map":{"version":3,"sources":["/Users/grigore/Github/booking/src/components/RoomFilter.js"],"names":["React","useContext","RoomContext","Title","getUnique","items","value","Set","map","item","RoomFilter","rooms","context","handleChange","type","capacity","price","minPrice","maxPrice","minSize","maxSize","breakfast","pets","types","index","people"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useContext } from \"react\";\nimport { RoomContext } from \"../context\";\nimport Title from \"../components/Title\";\n\n//geting all unique type values for filtering types\nconst getUnique = (items, value) => {\n  return [...new Set(items.map((item) => item[value]))];\n};\nexport default function RoomFilter({ rooms }) {\n  const context = useContext(RoomContext);\n  const {\n    handleChange,\n    type,\n    capacity,\n    price,\n    minPrice,\n    maxPrice,\n    minSize,\n    maxSize,\n    breakfast,\n    pets,\n  } = context;\n\n  //getting unique types\n  let types = getUnique(rooms, \"type\");\n  //getting all types\n  types = [\"all\", ...types];\n  //maping to jsx as option type filtering\n  types = types.map((item, index) => {\n    return (\n      <option value={item} key={index}>\n        {item}\n      </option>\n    );\n  });\n  //filtering capacity\n  let people = getUnique(rooms, \"capacity\");\n  people = people.map((item, index) => {\n    return (\n      <option key={index} value={item}>\n        {item}\n      </option>\n    );\n  });\n\n  return (\n    <section className=\"filter-container\">\n      <Title title=\"search rooms\" />\n      <form className=\"filter-form\">\n        {/* {select type} */}\n        <div className=\"form-group\">\n          <lable htmlFor=\"type\">Room Type</lable>\n          <select\n            name=\"type\"\n            id=\"type\"\n            value={type}\n            className=\"form-control\"\n            onChange={handleChange}\n          >\n            {types}\n          </select>\n        </div>\n        {/* {end select type} */}\n        {/* {guests} */}\n        <div className=\"form-group\">\n          <lable htmlFor=\"capacity\">Guests</lable>\n          <select\n            name=\"capacity\"\n            id=\"capacity\"\n            value={capacity}\n            className=\"form-control\"\n            onChange={handleChange}\n          >\n            {people}\n          </select>\n        </div>\n        {/* {end guests} */}\n        {/* {room price} */}\n        <div className=\"form-group\">\n          <label htmlFor=\"price\">room price ${price}</label>\n          <input\n            type=\"range\"\n            name=\"price\"\n            min={minPrice}\n            max={maxPrice}\n            id=\"price\"\n            value={price}\n            onChange={handleChange}\n            className=\"form-control\"\n          />\n        </div>\n\n        {/* {end room price} */}\n        {/* {size} */}\n        <div className=\"form-group\">\n          <label htmlFo=\"size\">room size</label>\n          <div className=\"size-inputs\">\n            <input\n              type=\"number\"\n              name=\"minSize\"\n              id=\"size\"\n              value={minSize}\n              onChange={handleChange}\n              className=\"size-input\"\n            />\n            <input\n              type=\"number\"\n              name=\"maxSize\"\n              id=\"size\"\n              value={maxSize}\n              onChange={handleChange}\n              className=\"size-input\"\n            />\n          </div>\n        </div>\n        {/* {end size} */}\n        {/* {extras} */}\n        {/* {end extras} */}\n      </form>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}